<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Tests.Fw.Mock.CCustomFunctionParamValidator">
<Super>%RegisteredObject,Tests.Fw.Mock.IMockParamValidator</Super>
<TimeCreated>63890,58067.960125</TimeCreated>

<Property name="objectReference">
<Type>%RegisteredObject</Type>
</Property>

<Property name="strFunctionName">
<Type>%String</Type>
</Property>

<Method name="%OnNew">
<Internal>1</Internal>
<FormalSpec>objectReference:%RegisteredObject,strFunctionName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
   set ..objectReference = objectReference
   set ..strFunctionName = strFunctionName

   quit $$$OK
]]></Implementation>
</Method>

<Method name="Validate">
<Internal>1</Internal>
<FormalSpec>object</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
   #dim status As %Status = $$$ERROR("Function or object not defined")
   
   if ($IsObject(..objectReference) && (..strFunctionName '= ""))
   {
      try
      {
         do $Method(..objectReference, ..strFunctionName, object)
         set status = $$$OK
      }
      catch
      {
         set status = $ZERROR
      }
   }
   
   quit status
]]></Implementation>
</Method>

<Method name="GetAssertDescription">
<Internal>1</Internal>
<FormalSpec>nIndex:%Integer,strMethodName:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   quit "Unable to invoke method """ _ ..strFunctionName _ "()"" on object " _ ..objectReference _
        " to validate parameter(" _ nIndex _ ") for method: " _ strMethodName
]]></Implementation>
</Method>
</Class>
</Export>
